#include "arch/memory.h"


ENTRY(_os_startup)
GROUP(libtarget.a libgcc.a)

MEMORY {
	ram		: ORIGIN = VIRT_ADDR + TEXT_OFFSET, LENGTH = 0xFFFFFFFF
#define	rom ram
	highvectors	: ORIGIN = 0xFFFF0000, LENGTH = 0x00010000
}

SECTIONS
{

	.init : {
			*(.init.text)

		PROVIDE(__INITCALL_LIST__ = .);
			KEEP(*(SORT(.initcall*)))
			LONG(0);
	} > rom

#ifdef	CONFIG_HIGH_VECTORS
	.vectors :  {
		PROVIDE(__rom_vectors_vma = .);
		KEEP(*(.vectors))
    	} > highvectors AT > rom
#endif

	.text LOADADDR(.vectors) + SIZEOF(.vectors): {
			*(.text*)
	} > rom

	.rodata : {
			*(.rodata*)
	} > rom

	.data : {
			*(.data*)
	} > ram AT> rom

	.bss : {
		PROVIDE(__bss_start = .);
			*(.init.task)
			*(.bss*)
			*(COMMON)
		PROVIDE(__bss_end = .);
	} > ram
}
