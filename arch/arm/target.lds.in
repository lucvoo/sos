#include "arch/memory.h"
#include "page.h"


#ifdef CONFIG_REMOVE_INIT_SECTIONS
#define	TEXT_ALIGN	ALIGN(PAGE_SIZE)
#else
#define	TEXT_ALIGN
#endif

ENTRY(_os_startup)
GROUP(libtarget.a libgcc.a)

MEMORY {
	ram		: ORIGIN = VIRT_ADDR + TEXT_OFFSET, LENGTH = 0xFFFFFFFF
#define	rom ram
	highvectors	: ORIGIN = 0xFFFF0000, LENGTH = 0x00010000
}

SECTIONS
{

	.init : {
			*(.init.text)

		PROVIDE(__INITCALL_LIST__ = .);
			KEEP(*(SORT(.initcall*)))
			LONG(0);
	} > rom

	.vectors :  {
		PROVIDE(__vectors_start = LOADADDR(.vectors));
		KEEP(*(.vectors))
		PROVIDE(__vectors_end   = LOADADDR(.vectors) + SIZEOF(.vectors));
    	} > highvectors AT > rom

	. = LOADADDR(.vectors) + SIZEOF(.vectors);
	.text TEXT_ALIGN : {
			*(.text*)
	} > rom

	.rodata : {
			*(.rodata*)
	} > rom

	.data : {
			*(.data*)
	} > ram AT> rom

	.bss : {
		PROVIDE(__bss_start = .);
			*(.bss*)
			*(COMMON)
		PROVIDE(__bss_end = .);
	} > ram
}
